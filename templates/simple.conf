server {
	listen 80;
	listen [::]:80;

	server_name __SERVER_NAME__ ;
	index index.html;



	location ~ /\.well-known/acme-challenge {
		allow all;
	}

	location /{
		return 301 https://$host$request_uri;
	}

	#location / {
	#	root   /usr/share/nginx/html;
	#	index  index.html index.htm;
	#}

}

server {
	listen 443 ssl;
	listen [::]:443;

	server_name __SERVER_NAME__ ;

	ssl_certificate /etc/letsencrypt/live/__DOMAIN__/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/__DOMAIN__/privkey.pem;
	ssl_dhparam /etc/letsencrypt/live/__DOMAIN__/dhparam.pem;


	location / {
		root   /usr/share/nginx/html;
		index  index.html index.htm;
	}

	#Proxy sample
	#location /proxied {
	#	proxy_pass http://docker-app;
	#	proxy_http_version 1.1;
	#	proxy_set_header Upgrade $http_upgrade;
	#	proxy_set_header Connection 'upgrade';
	#	proxy_set_header Host $host;
	#	proxy_cache_bypass $http_upgrade;
	#	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#	proxy_set_header X-Real-IP $remote_addr;
	#	proxy_set_header X-NginX-Proxy true;
	#}



#SSL PARAMS
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
}


